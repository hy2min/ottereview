version: '3.8'
services:
  db-mysql:
    image: mysql:8.0
    container_name: db-mysql
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - ./db:/var/lib/mysql
    command: [ '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - springboot-mysql-net

  redis:
    image: redis:7
    container_name: ottereview-redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - springboot-mysql-net

  openvidu-server:
    image: openvidu/openvidu-dev:2.31.0
    container_name: openvidu-server
    ports:
      - "4443:4443"
    environment:
      OPENVIDU_SECRET: ${OPENVIDU_SECRET}
    networks:
      - springboot-mysql-net

  springboot-app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: springboot-app
    ports:
      - "8080:8080"
    depends_on:
      db-mysql:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      GITHUB_APP_ID: ${GITHUB_APP_ID}
      GITHUB_APP_CLIENT_ID: ${GITHUB_APP_CLIENT_ID}
      GITHUB_APP_CLIENT_SECRET: ${GITHUB_APP_CLIENT_SECRET}
      GITHUB_APP_PRIVATE_KEY_PATH: ${GITHUB_APP_PRIVATE_KEY_PATH}
      GITHUB_APP_OAUTH_REDIRECT_URI: ${GITHUB_APP_OAUTH_REDIRECT_URI}
      GITHUB_OAUTH_CLIENT_ID: ${GITHUB_OAUTH_CLIENT_ID}
      GITHUB_OAUTH_CLIENT_SECRET: ${GITHUB_OAUTH_CLIENT_SECRET}
      GITHUB_OAUTH_REDIRECT_URI: ${GITHUB_OAUTH_REDIRECT_URI}
      GITHUB_APP_AUTHENTICATION_JWT_ACCESS_EXPMIN: ${GITHUB_APP_AUTHENTICATION_JWT_ACCESS_EXPMIN}
      APP_JWT_SECRET: ${APP_JWT_SECRET}
      APP_JWT_ACCESS_EXPMIN: ${APP_JWT_ACCESS_EXPMIN}
      APP_JWT_REFRESH_EXPMIN: ${APP_JWT_REFRESH_EXPMIN}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_REGION: ${S3_REGION}
      OPENVIDU_SECRET: ${OPENVIDU_SECRET}
      OPENVIDU_URL: ${OPENVIDU_URL}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
    volumes:
      # 소스코드를 volume mount로 실시간 반영
      - /etc/localtime:/etc/localtime:ro
      - ./src:/app/src:rw
      - ./build.gradle:/app/build.gradle:ro
      - ./settings.gradle:/app/settings.gradle:ro
      # Gradle 캐시 볼륨 (선택사항)
      - gradle-cache:/root/.gradle
      # 빌드 결과물 보존 (선택사항)
      - ./build:/app/build
    restart: unless-stopped
    networks:
      - springboot-mysql-net

networks:
  springboot-mysql-net:
    driver: bridge

volumes:
  gradle-cache:
